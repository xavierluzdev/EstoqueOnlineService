// <auto-generated />
using EstoqueOnlineService.Material.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstoqueOnlineService.Migrations
{
    [DbContext(typeof(MaterialContexto))]
    partial class MaterialContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasDefaultValue("AT");

                    b.HasKey("Id");

                    b.ToTable("Categoria","dbo");
                });

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.Classificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasDefaultValue("AT");

                    b.HasKey("Id");

                    b.ToTable("Classificacao","dbo");
                });

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.ItemMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(500);

                    b.Property<int>("MaterialId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasDefaultValue("AT");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId")
                        .HasName("IDX_ItemMaterialMaterial")
                        .HasFilter("[MaterialId] IS NOT NULL");

                    b.ToTable("ItemMaterial","dbo");
                });

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId");

                    b.Property<int>("ClassificacaoId");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasDefaultValue("AT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .HasName("IDX_CategoriaMaterial")
                        .HasFilter("[CategoriaId] IS NOT NULL");

                    b.HasIndex("ClassificacaoId");

                    b.ToTable("Material","dbo");
                });

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.ItemMaterial", b =>
                {
                    b.HasOne("EstoqueOnlineService.Material.Entidades.Material", "Material")
                        .WithMany("ItemMateriais")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EstoqueOnlineService.Material.Entidades.Material", b =>
                {
                    b.HasOne("EstoqueOnlineService.Material.Entidades.Categoria", "Categoria")
                        .WithMany("Materiais")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EstoqueOnlineService.Material.Entidades.Classificacao", "Classificacao")
                        .WithMany("Materiais")
                        .HasForeignKey("ClassificacaoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
